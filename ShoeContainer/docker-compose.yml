version: "5.0.4"

networks:
   frontend:
   backend:

services:
   webmvc:
      build:
         context: .\src\Web\WebMvc
         dockerfile: Dockerfile
      environment:
         - ASPNETCORE_ENVIRONMENT=Production
         - CatalogUrl=https://host.docker.internal:5005
         - ASPNETCORE_URLS=https://+:5010;http://+:5009
         - ASPNETCORE_HTTPS_PORT=5010
         - ASPNETCORE_Kestrel__Certificates__Default__Password=aspnetcoreapp2
         - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcoreapp2.pfx
      volumes:
         - ~/%USERPROFILE%/.aspnet/https:/https:ro
      ports:
        - "5010:5010"
        - "5009:5009"
      networks:
         - backend
         - frontend
      depends_on:
         - catalog
      container_name: webfront
   catalog:
      build:
         context: .\src\Services\ProductCatalogApi
         dockerfile: Dockerfile
      image: shoes/catalog
      environment:
         - DataBaseConnection=Data Source=mssqlserver;Initial Catalog=CatalogDb;User Id=sa;Password=ProductApi(!);MultipleActiveResultSets=True;
         - ASPNETCORE_URLS=https://+:5005;http://+:5004
         - ASPNETCORE_ENVIRONMENT=Production
         - ASPNETCORE_HTTPS_PORT=5005
         - ASPNETCORE_Kestrel__Certificates__Default__Password=aspnetcoreapp
         - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcoreapp.pfx
      volumes:
         - ~/%USERPROFILE%/.aspnet/https:/https:ro
      container_name: catalogapi
      ports:
         - "5005:5005"
         - "5004:5004"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver
         
   mssqlserver:
      image: "mcr.microsoft.com/mssql/server:2019-latest"
      ports:
         - "1445:1433"
      container_name: mssqlcontainer
      environment:
         - ACCEPT_EULA=Y
         - SA_PASSWORD=ProductApi(!)
         - MSSQL_PID=Developer
      networks:
         - backend

      

